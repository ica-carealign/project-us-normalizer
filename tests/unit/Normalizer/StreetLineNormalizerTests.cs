using FluentAssertions;

using SsiGroup.ProjectUsNormalizer;

using Xunit;

namespace ProjectUsNormalizer.Tests.Unit.Normalizer;

public class StreetLineNormalizerTests
{
  [Theory]
  // Empty street line
  [InlineData("     ", null)]
  [InlineData("", null)]
  [InlineData(" \t \n", null)]

  // Avenue should become street name and should be spelled out
  [InlineData("1000 AVE", "1000 AVENUE")]
  [InlineData("1001 AVE E", "1001 AVENUE E")]
  [InlineData("1002 AVENUE EAST", "1002 AVENUE E")]
  [InlineData("1003 avenue E", "1003 AVENUE E")]
  [InlineData("1004 ave east", "1004 AVENUE E")]
  [InlineData("1005 south ave east", "1005 SOUTH AVE E")] // SOUTH is a street name, should be spelled out
  [InlineData("1006 NE avenue east", "1006 NORTHEAST AVE E")] // NORTHEAST is a street name, should be spelled out
  [InlineData("1007 N E avenue east", "1007 N EAST AVE E")] // EAST is a street name, should be spelled out
  [InlineData("1008 Miles Johnson Parkway", "1008 MILES JOHNSON PKWY")]
  [InlineData("1009 West End Avenue", "1009 W END AVE")]
  [InlineData("1010 West Main Thing St North Apartment 12", "1010 W MAIN THING ST N APT 12")]
  [InlineData("1011 South West Main Thing St North East Apt 12", "1011 SW MAIN THING ST NE APT 12")] // should abbreviate and concat both pre and post directions
  [InlineData("1012 SOUTHEAST FREEWAY NORTH", "1012 SOUTHEAST FWY N")] // SOUTHEAST is a street name, should be spelled out
  [InlineData("1013 SE FREEWAY NORTH", "1013 SOUTHEAST FWY N")] // SOUTHEAST is a street name, should be spelled out
  [InlineData("1013 SOUTH E FREEWAY NORTH", "1013 S EAST FWY N")] // EAST is a street name, should be spelled out
  [InlineData("1014 BAY W DRIVE", "1014 BAY WEST DR")] // WEST is part of street name, should be spelled out
  [InlineData("1015 NORTH AVENUE", "1015 NORTH AVE")] // NORTH is street name, should be spelled out
  [InlineData("1016 East 1700 South", "1016 E 1700 S")] // Grid style address: E is predirectional, S is postdirectional, and 1700 is street name

  // Multiple suffixes should spell out first (because it is s street name) and abbreviate last
  [InlineData("2000 main avenue drive", "2000 MAIN AVENUE DR")]
  [InlineData("2001 3RD STREET CIRCLE WEST", "2001 3RD STREET CIR W")]
  [InlineData("2002 Main Pky Ave", "2002 MAIN PARKWAY AVE")]
  [InlineData("2003 North Main Pky Ave", "2003 N MAIN PARKWAY AVE")]
  [InlineData("2004 North West Main Pky Ave", "2004 NW MAIN PARKWAY AVE")]
  [InlineData("2005 Main Pky Ave South", "2005 MAIN PARKWAY AVE S")]
  [InlineData("2006 Main Pky Ave South East", "2006 MAIN PARKWAY AVE SE")]
  [InlineData("2007 North Main Pky Ave South", "2007 N MAIN PARKWAY AVE S")]
  [InlineData("2008 North West Main Pky Ave South East", "2008 NW MAIN PARKWAY AVE SE")]
  [InlineData("2009 Church Court Way", "2009 CHURCH COURT WAY")] // should not convert Court to CT (Connecticut)

  // Multiple pre-directional
  [InlineData("3000 NORTH E MAIN STREET", "3000 NE MAIN ST")]
  [InlineData("3001 N EAST MAIN STREET", "3001 NE MAIN ST")]
  [InlineData("3002 NORTH EAST MAIN STREET", "3002 NE MAIN ST")]
  [InlineData("3003 N E MAIN STREET", "3003 NE MAIN ST")]
  [InlineData("3004 N. E. MAIN STREET", "3004 NE MAIN ST")]
  [InlineData("3005 N.E. MAIN STREET", "3005 NE MAIN ST")]
  [InlineData("3006 N.E MAIN STREET", "3006 NE MAIN ST")]
  [InlineData("3007 NE. MAIN STREET", "3007 NE MAIN ST")]
  [InlineData("3008 NE MAIN STREET", "3008 NE MAIN ST")]
  [InlineData("3009 NORTHEAST MAIN STREET", "3009 NE MAIN ST")]
  [InlineData("3010 NORTH-EAST MAIN STREET", "3010 NE MAIN ST")]
  [InlineData("3100 NORTH W MAIN STREET", "3100 NW MAIN ST")]
  [InlineData("3101 N WEST MAIN STREET", "3101 NW MAIN ST")]
  [InlineData("3102 NORTH WEST MAIN STREET", "3102 NW MAIN ST")]
  [InlineData("3103 N W MAIN STREET", "3103 NW MAIN ST")]
  [InlineData("3104 N. W. MAIN STREET", "3104 NW MAIN ST")]
  [InlineData("3105 N.W. MAIN STREET", "3105 NW MAIN ST")]
  [InlineData("3106 N.W MAIN STREET", "3106 NW MAIN ST")]
  [InlineData("3107 NW. MAIN STREET", "3107 NW MAIN ST")]
  [InlineData("3108 NW MAIN STREET", "3108 NW MAIN ST")]
  [InlineData("3109 NORTHWEST MAIN STREET", "3109 NW MAIN ST")]
  [InlineData("3110 NORTH-WEST MAIN STREET", "3110 NW MAIN ST")]
  [InlineData("3200 SOUTH E MAIN STREET", "3200 SE MAIN ST")]
  [InlineData("3201 S EAST MAIN STREET", "3201 SE MAIN ST")]
  [InlineData("3202 SOUTH EAST MAIN STREET", "3202 SE MAIN ST")]
  [InlineData("3203 S E MAIN STREET", "3203 SE MAIN ST")]
  [InlineData("3204 S. E. MAIN STREET", "3204 SE MAIN ST")]
  [InlineData("3205 S.E. MAIN STREET", "3205 SE MAIN ST")]
  [InlineData("3206 S.E MAIN STREET", "3206 SE MAIN ST")]
  [InlineData("3207 SE. MAIN STREET", "3207 SE MAIN ST")]
  [InlineData("3208 SE MAIN STREET", "3208 SE MAIN ST")]
  [InlineData("3209 SOUTHEAST MAIN STREET", "3209 SE MAIN ST")]
  [InlineData("3210 SOUTH-EAST MAIN STREET", "3210 SE MAIN ST")]
  [InlineData("3300 SOUTH W MAIN STREET", "3300 SW MAIN ST")]
  [InlineData("3301 S WEST MAIN STREET", "3301 SW MAIN ST")]
  [InlineData("3302 SOUTH WEST MAIN STREET", "3302 SW MAIN ST")]
  [InlineData("3303 S W MAIN STREET", "3303 SW MAIN ST")]
  [InlineData("3304 S. W. MAIN STREET", "3304 SW MAIN ST")]
  [InlineData("3305 S.W. MAIN STREET", "3305 SW MAIN ST")]
  [InlineData("3306 S.W MAIN STREET", "3306 SW MAIN ST")]
  [InlineData("3307 SW. MAIN STREET", "3307 SW MAIN ST")]
  [InlineData("3308 SW MAIN STREET", "3308 SW MAIN ST")]
  [InlineData("3309 SOUTHWEST MAIN STREET", "3309 SW MAIN ST")]
  [InlineData("3310 SOUTH-WEST MAIN STREET", "3310 SW MAIN ST")]
  // Multiple post-directional
  [InlineData("3400 MAIN STREET NORTH E", "3400 MAIN ST NE")]
  [InlineData("3401 MAIN STREET N EAST", "3401 MAIN ST NE")]
  [InlineData("3402 MAIN STREET NORTH EAST", "3402 MAIN ST NE")]
  [InlineData("3403 MAIN STREET N E", "3403 MAIN ST NE")]
  [InlineData("3404 MAIN STREET N. E.", "3404 MAIN ST NE")]
  [InlineData("3405 MAIN STREET N.E.", "3405 MAIN ST NE")]
  [InlineData("3406 MAIN STREET N.E", "3406 MAIN ST NE")]
  [InlineData("3407 MAIN STREET NE.", "3407 MAIN ST NE")]
  [InlineData("3408 MAIN STREET NE", "3408 MAIN ST NE")]
  [InlineData("3409 MAIN STREET NORTHEAST", "3409 MAIN ST NE")]
  [InlineData("3410 MAIN STREET NORTH-EAST", "3410 MAIN ST NE")]
  [InlineData("3500 MAIN STREET NORTH W", "3500 MAIN ST NW")]
  [InlineData("3501 MAIN STREET N WEST", "3501 MAIN ST NW")]
  [InlineData("3502 MAIN STREET NORTH WEST", "3502 MAIN ST NW")]
  [InlineData("3503 MAIN STREET N W", "3503 MAIN ST NW")]
  [InlineData("3504 MAIN STREET N. W.", "3504 MAIN ST NW")]
  [InlineData("3505 MAIN STREET N.W.", "3505 MAIN ST NW")]
  [InlineData("3506 MAIN STREET N.W", "3506 MAIN ST NW")]
  [InlineData("3507 MAIN STREET NW.", "3507 MAIN ST NW")]
  [InlineData("3508 MAIN STREET NW", "3508 MAIN ST NW")]
  [InlineData("3509 MAIN STREET NORTHWEST", "3509 MAIN ST NW")]
  [InlineData("3510 MAIN STREET NORTH-WEST", "3510 MAIN ST NW")]
  [InlineData("3600 MAIN STREET SOUTH E", "3600 MAIN ST SE")]
  [InlineData("3601 MAIN STREET S EAST", "3601 MAIN ST SE")]
  [InlineData("3602 MAIN STREET SOUTH EAST", "3602 MAIN ST SE")]
  [InlineData("3603 MAIN STREET S E", "3603 MAIN ST SE")]
  [InlineData("3604 MAIN STREET S. E.", "3604 MAIN ST SE")]
  [InlineData("3605 MAIN STREET S.E.", "3605 MAIN ST SE")]
  [InlineData("3606 MAIN STREET S.E", "3606 MAIN ST SE")]
  [InlineData("3607 MAIN STREET SE.", "3607 MAIN ST SE")]
  [InlineData("3608 MAIN STREET SE", "3608 MAIN ST SE")]
  [InlineData("3609 MAIN STREET SOUTHEAST", "3609 MAIN ST SE")]
  [InlineData("3610 MAIN STREET SOUTH-EAST", "3610 MAIN ST SE")]
  [InlineData("3740 MAIN STREET SOUTH W", "3740 MAIN ST SW")]
  [InlineData("3741 MAIN STREET S WEST", "3741 MAIN ST SW")]
  [InlineData("3742 MAIN STREET SOUTH WEST", "3742 MAIN ST SW")]
  [InlineData("3743 MAIN STREET S W", "3743 MAIN ST SW")]
  [InlineData("3744 MAIN STREET S. W.", "3744 MAIN ST SW")]
  [InlineData("3745 MAIN STREET S.W.", "3745 MAIN ST SW")]
  [InlineData("3746 MAIN STREET S.W", "3746 MAIN ST SW")]
  [InlineData("3747 MAIN STREET SW.", "3747 MAIN ST SW")]
  [InlineData("3748 MAIN STREET SW", "3748 MAIN ST SW")]
  [InlineData("3749 MAIN STREET SOUTHWEST", "3749 MAIN ST SW")]
  [InlineData("3750 MAIN STREET SOUTH-WEST", "3750 MAIN ST SW")]

  // Dealing with invalid characters
  [InlineData("4000 12TH. Street", "4000 12TH ST")]
  [InlineData("4001 Main   \t Avenue", "4001 MAIN AVE")]
  [InlineData("4002 CHURCH \"Drive\" ", "4002 CHURCH DR")]
  [InlineData("4003 Broadway (east) ", "4003 BROADWAY E")]
  [InlineData("4004 PINE Circle, Court ", "4004 PINE CIRCLE CT")]
  [InlineData("4005 ELM*HILL Avenue", "4005 ELMHILL AVE")]
  [InlineData("4006 WEST: END Avenue", "4006 W END AVE")]
  [InlineData("4007 West Main' rd", "4007 W MAIN RD")]
  [InlineData("4008 @ West Main STREET", "4008 W MAIN ST")]
  [InlineData("4009 @ West  Main & STREET: #U108", "4009 W MAIN ST # U108")]

  // When the state name is the complete Primary Street Name, it should be fully spelled out
  [InlineData("8000 OK avenue", "8000 OKLAHOMA AVE")]
  [InlineData("8001 new york drive west", "8001 NEW YORK DR W")]
  [InlineData("8002 ND Street", "8002 NORTH DAKOTA ST")]
  [InlineData("8003 Connecticut Drive", "8003 CONNECTICUT DR")]
  [InlineData("8004 CT Drive", "8004 CONNECTICUT DR")]
  [InlineData("8005 Connecticut Court", "8005 CONNECTICUT CT")]
  [InlineData("8006 CT CT", "8006 CONNECTICUT CT")]
  [InlineData("8007 EAST KENTUCKY KEY", "8007 E KENTUCKY KY")]
  [InlineData("8008 Puerto Rico Street", "8008 PUERTO RICO ST")]
  [InlineData("8009 Puerto Rico Prairie", "8009 PUERTO RICO PR")]
  [InlineData("8010 MT MT", "8010 MONTANA MT")]
  [InlineData("8011 WY WY", "8011 WYOMING WAY")]
  [InlineData("8012 WYOMING WY", "8012 WYOMING WAY")]
  [InlineData("8013 NORTH WEST WY WY", "8013 NW WYOMING WAY")]
  // When the state name is a portion of the Primary Street Name, it should be abbreviated
  [InlineData("8100 Montana Treasure Avenue", "8100 MT TREASURE AVE")]
  [InlineData("8101 Montana ROUTE 11", "8101 MT ROUTE 11")]
  [InlineData("8102 Connecticut State Highway 1", "8102 CT STATE HIGHWAY 1")]
  [InlineData("8103 South Carolina county road 22", "8103 SC COUNTY ROAD 22")]
  [InlineData("8104 california hwy 555", "8104 CA HIGHWAY 555")]
  [InlineData("8105 TN 431", "8105 TN HIGHWAY 431")]
  [InlineData("8106 TENNESSEE 431", "8106 TN HIGHWAY 431")]
  [InlineData("8107 TENNESSEE HWY 431", "8107 TN HIGHWAY 431")]
  [InlineData("8108 TENNESSEE HIGHWAY 431", "8108 TN HIGHWAY 431")]
  [InlineData("8109 TN HIGHWAY 431", "8109 TN HIGHWAY 431")]
  [InlineData("8110 TN HWY 431", "8110 TN HIGHWAY 431")]
  [InlineData("8111 KENTUCKY ST HWY 440", "8111 KY STATE HIGHWAY 440")]
  [InlineData("8112 KENTUCKY STATE HWY 440", "8112 KY STATE HIGHWAY 440")]
  [InlineData("8113 KY ST HWY 440", "8113 KY STATE HIGHWAY 440")]
  [InlineData("8114 MONTANA 15 FRONTAGE ROAD", "8114 MT HIGHWAY 15 FRONTAGE RD")]
  [InlineData("8115 MT 3 BYP ROAD", "8115 MT HIGHWAY 3 BYPASS RD")]

  // Special cases (county, state, local highways, interstates, etc)
  [InlineData("9000 COUNTY ROAD 20 NE", "9000 COUNTY ROAD 20 NE")]
  [InlineData("9001 COUNTY RD 20 NE", "9001 COUNTY ROAD 20 NE")]
  [InlineData("9002 CNTY RD 20 NE", "9002 COUNTY ROAD 20 NE")]
  [InlineData("9003 CNTY ROAD 20 NE", "9003 COUNTY ROAD 20 NE")]
  [InlineData("9004 CR 20 NE", "9004 COUNTY ROAD 20 NE")]
  [InlineData("9005 COUNTY HIGHWAY 140", "9005 COUNTY HIGHWAY 140")]
  [InlineData("9006 COUNTY HWY 140", "9006 COUNTY HIGHWAY 140")]
  [InlineData("9007 CNTY HWY 140", "9007 COUNTY HIGHWAY 140")]
  [InlineData("9008 CNTY HIGHWAY 140", "9008 COUNTY HIGHWAY 140")]
  [InlineData("9009 California County Road 555", "9009 CA COUNTY ROAD 555")]
  [InlineData("9010 CA County RD 555", "9010 CA COUNTY ROAD 555")]
  [InlineData("9011 HWY 66 FRONTAGE ROAD", "9011 HIGHWAY 66 FRONTAGE RD")]
  [InlineData("9012 HWY 3 BYP ROAD", "9012 HIGHWAY 3 BYPASS RD")]
  [InlineData("9013 I 10", "9013 INTERSTATE 10")]
  [InlineData("9014 INTERSTATE HWY 681", "9014 INTERSTATE 681")]
  [InlineData("9015 I 55 BYPASS", "9015 INTERSTATE 55 BYP")]
  [InlineData("9016 I 26 BYP ROAD", "9016 INTERSTATE 26 BYPASS RD")]
  [InlineData("9017 I 44 FRONTAGE ROAD", "9017 INTERSTATE 44 FRONTAGE RD")]
  [InlineData("9018–10 WEST BRONX ROAD", "9018–10 W BRONX RD")] // hyphens in primary address number should not be removed
  [InlineData("9019–20 WEST BRONX ROAD SOUTH", "9019–20 W BRONX RD S")] // hyphens in primary address number should not be removed
  [InlineData("9020 US 41", "9020 US HIGHWAY 41")] // should insert word HIGHWAY between state and number
  [InlineData("9021 US 41 South West", "9021 US HIGHWAY 41 SW")] // should insert word HIGHWAY between state and number
  [InlineData("9022 SR MM", "9022 STATE ROAD MM")]
  [InlineData("9023 ST RT 175", "9023 STATE ROUTE 175")]
  [InlineData("9024 STATE RT 175", "9024 STATE ROUTE 175")]
  [InlineData("9025 STATE RTE 175", "9025 STATE ROUTE 175")]
  [InlineData("9026 STATE ROUTE 175", "9026 STATE ROUTE 175")]
  [InlineData("9027 STATE ROUTE 175 EAST", "9027 STATE ROUTE 175 E")]
  [InlineData("9028 rd 39.4", "9028 ROAD 39.4")] // should keep period in the grid number
  [InlineData("9029 CR 1185", "9029 COUNTY ROAD 1185")]
  [InlineData("9030 CNTY RD 60E", "9030 COUNTY ROAD 60E")]
  [InlineData("9031 COUNTY RD 185", "9031 COUNTY ROAD 185")]
  [InlineData("9032 CNTY ROAD 85", "9032 COUNTY ROAD 85")]
  [InlineData("9033 COUNTY ROAD 140", "9033 COUNTY ROAD 140")]
  [InlineData("9034 COUNTY HWY 140", "9034 COUNTY HIGHWAY 140")]
  [InlineData("9035 COUNTY HIGHWAY 140", "9035 COUNTY HIGHWAY 140")]
  [InlineData("9036 CNTY HIGHWAY 140", "9036 COUNTY HIGHWAY 140")]
  [InlineData("9037 CNTY HWY 140", "9037 COUNTY HIGHWAY 140")]
  [InlineData("9038 SR 220", "9038 STATE ROAD 220")]
  [InlineData("9039 ST RD 175", "9039 STATE ROAD 175")]
  [InlineData("9040 STATE RD 175", "9040 STATE ROAD 175")]
  [InlineData("9041 STATE ROAD 175", "9041 STATE ROAD 175")]
  [InlineData("9042 ST ROAD 175 EAST", "9042 STATE ROAD 175 E")]
  [InlineData("9043 ST HWY 303", "9043 STATE HIGHWAY 303")]
  [InlineData("9044 STATE HWY 60", "9044 STATE HIGHWAY 60")]
  [InlineData("9045 STATE HIGHWAY 65", "9045 STATE HIGHWAY 65")]
  [InlineData("9046 ST HIGHWAY 31 EAST", "9046 STATE HIGHWAY 31 E")]
  [InlineData("9047 RT 88", "9047 ROUTE 88")]
  [InlineData("9048 RTE 88", "9048 ROUTE 88")]
  [InlineData("9049 ROUTE 88", "9049 ROUTE 88")]
  [InlineData("9050 RD 5A", "9050 ROAD 5A")]
  [InlineData("9051 ROAD 5A", "9051 ROAD 5A")]
  [InlineData("9052 I10", "9052 INTERSTATE 10")]
  [InlineData("9053 IH20", "9053 INTERSTATE 20")]
  [InlineData("9054 IH20 EAST", "9054 INTERSTATE 20 E")]
  [InlineData("9055 IH20 BYP ROAD", "9055 INTERSTATE 20 BYPASS RD")]
  [InlineData("9056 TSR 45", "9056 TOWNSHIP ROAD 45")]
  [InlineData("9057 TOWNSHIP RD 45", "9057 TOWNSHIP ROAD 45")]
  [InlineData("9058 TOWNSHIP ROAD 45", "9058 TOWNSHIP ROAD 45")]
  [InlineData("9059 RANCH ROAD 622", "9059 RANCH ROAD 622")]
  [InlineData("9060 RANCH RD 622", "9060 RANCH ROAD 622")]
  [InlineData("9061 EXPRESSWAY 55", "9061 EXPRESSWAY 55")]
  [InlineData("9062 farm to market 1200", "9062 FM 1200")]
  [InlineData("9063 fm 1200", "9063 FM 1200")]
  [InlineData("9064 HIGHWAY FM 1200", "9064 FM 1200")]
  [InlineData("9065 HWY FM 1200", "9065 FM 1200")]
  [InlineData("9066 HIGHWAY FARM TO MARKET 1200", "9066 FM 1200")]
  [InlineData("9067 HWY FARM TO MARKET 1200", "9067 FM 1200")]

  // Post office addresses
  [InlineData("Post office Box G", "PO BOX G")]
  [InlineData("PO Box 11890", "PO BOX 11890")]

  // Rural route addresses
  [InlineData("RFD 91 Box A7", "RR 91 BOX A7")]
  [InlineData("RFD Route 61 Box 87b", "RR 61 BOX 87B")]
  [InlineData("RFD Route 61 # 87b", "RR 61 BOX 87B")]
  [InlineData("RFD Route 61 #87b", "RR 61 BOX 87B")]
  [InlineData("RD 61 # 87b", "RR 61 BOX 87B")]
  [InlineData("RD61 # 87b", "RR 61 BOX 87B")]
  [InlineData("RR0061 #87b", "RR 61 BOX 87B")] // must not add leading zeros
  [InlineData("RR0061 #87b Bryan Dairy Rd", "RR 61 BOX 87B")] // should not allow additional designators
  [InlineData("Rural Route 91 Box A7", "RR 91 BOX A7")]
  [InlineData("Rural Route 0091 Box A7", "RR 91 BOX A7")]
  [InlineData("Rural Route Number 91 Box A7", "RR 91 BOX A7")]
  [InlineData("Rural Route NO 91 Box A7", "RR 91 BOX A7")]
  [InlineData("Rural Route NO. 91 Box A7", "RR 91 BOX A7")]
  [InlineData("Ruta 91 Bzn A7", "RR 91 BOX A7")]
  [InlineData("Ruta 91 buzon A7", "RR 91 BOX A7")]
  [InlineData("Ruta 0091 buzon A7", "RR 91 BOX A7")]
  public void ShouldParseStreetComponents(string? street, string? expected)
  {
    string? actual = AddressNormalizer.NormalizeStreetLine(street);

    actual.Should().BeEquivalentTo(expected);
  }
}
